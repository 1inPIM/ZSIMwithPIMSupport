// As simple as it gets: 1-core system with 2 short processes

sys = {


 //   lineSize = 64;
 //   frequency = 2400;
 //
 //   cores = {
 //       beefy = {
 //           type = "Simple";
 //           cores = 16;
 //           icache = "l1i_beefy";
 //           dcache = "l1d_beefy";
 //       };
 //
 //       
 //   };
 //
 //   caches = {
 //       l1d_beefy = {
 //           caches = 16;
 //           size = 32768;
 //           array = {
 //               type = "SetAssoc";
 //               ways = 8;
 //           };
 //           latency = 4;
 //       };
 //
 //       l1i_beefy = {
 //           caches = 16;
 //           size = 32768;
 //           array = {
 //               type = "SetAssoc";
 //               ways = 4;
 //           };
 //           latency = 3;
 //       };
 //
 //       l2_beefy = {
 //           caches = 16;
 //           size = 262144;
 //           latency = 7;
 //           array = {
 //               type = "SetAssoc";
 //               ways = 8;
 //           };
 //           children = "l1i_beefy|l1d_beefy";
 //       };
 //
 //
 //
 //
 //       l3 = {
 //           caches = 1;
 //           banks = 6;
 //           size = 12582912;
 //           latency = 27;
 //
 //           array = {
 //               type = "SetAssoc";
 //               hash = "H3";
 //               ways = 16;
 //           };
 //           children = "l2_beefy";
 //       };
 //   };
    cores = {
        simpleCore = {
            type = "Simple";
            dcache = "l1d";
            icache = "l1i";
        };
    };

    mem = {
       // pim = True;
        type = "Simple";
    };
   lineSize = 64;

   caches = {
       l1d = {
           size = 65536;
       };
       l1i = {
           size = 32768;
       };
       l2 = {
           caches = 1;
           size = 2097152;
           children = "l1i|l1d";  // interleave
       };
      
   };

 

};

sim = {
    phaseLength = 10000;
    // attachDebugger = True;
    schedQuantum = 50;  // switch threads frequently
   // procStatsFilter = "l1.*|l2.*";
   // pim = True;
    printHierarchy = True;
};

process0 = {
    command = "/tmp/VisualGDB/c/Users/vine/source/repos/zsim/graph/Debug/graph";
};


//process1 = {
//    command = "cat tests/simple.cfg";
//};

